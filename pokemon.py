#encoding: utf-8
#! python3


"""
A module for scraping Bulbapedia for pokemon stats (Currently only implemented for Gen I)
The main method fetches and pairs a list of IDs, names, and stats for the original 151 pokemon
It returns a list of tuples, but can be converted to JSON with the convert_to_json method
"""

from collections import OrderedDict
import requests
import bs4
import json


def get_base_stat_data():
    """
    :return: A BeautifulSoup object containing data from Bulbapedia
    """

    url = "http://bulbapedia.bulbagarden.net/wiki/List_of_Pok√©mon_by_base_stats_(Generation_I)"
    r = requests.get(url, "lxml")
    soup = bs4.BeautifulSoup(r.content)
    return soup


def get_pokemon_ids(soup):
    """
    :param soup: The BeautifulSoup object returned by get_page_data()

    :return: A list of Pokemon IDs
    """

    list_of_ids = []

    for element in soup.find_all("b"):
        _verify_and_append_element(element, list_of_ids)

    return list_of_ids


def get_pokemon_names(soup):
    """
    :param soup: The BeautifulSoup object returned by get_page_data()

    :return: A list of Pokemon names in order
    """

    list_of_names = []

    for element in soup.find_all("td", align="left"):
        _verify_and_append_element(element, list_of_names)

    return list_of_names


def get_hp_stats(soup):
    """
    :param soup: The BeautifulSoup object returned by get_page_data()

    :return: A list of Pokemon HP base stats
    """

    list_of_hps = []

    for element in soup.find_all("td", style="background:#FF5959"):
        _verify_and_append_element(element,list_of_hps)

    return list_of_hps


def get_attack_stats(soup):
    """
    :param soup: The BeautifulSoup object returned by get_page_data()

    :return: A list of Pokemon Attack base stats
    """

    list_of_attacks = []

    for element in soup.find_all("td", style="background:#F5AC78"):
        _verify_and_append_element(element,list_of_attacks)

    return list_of_attacks


def get_defense_stats(soup):
    """
    :param soup: The BeautifulSoup object returned by get_page_data()

    :return: A list of Pokemon Defense base stats
    """

    list_of_defenses = []

    for element in soup.find_all("td", style="background:#FAE078"):
        _verify_and_append_element(element,list_of_defenses)

    return list_of_defenses


def get_speed_stats(soup):
    """
    :param soup: The BeautifulSoup object returned by get_page_data()

    :return: A list of Pokemon Speed base stats
    """

    list_of_speeds = []

    for element in soup.find_all("td", style="background:#FA92B2"):
        _verify_and_append_element(element,list_of_speeds)

    return list_of_speeds


def get_special_stats(soup):
    """
    :param soup: The BeautifulSoup object returned by get_page_data()

    :return: A list of Pokemon Special base stats
    """

    list_of_specials = []

    for element in soup.find_all("td", style="background:#94EFE0"):
        _verify_and_append_element(element,list_of_specials)

    return list_of_specials


def _verify_and_append_element(element, ordered_list):
    if element.text is not None or element.text is not "":
        ordered_list.append(element.text.strip())


def zip_stats(ids, names, hps, attacks, defenses, speeds, specials):
    """
    :param ids: List of pokemon IDs in order
    :param names: List of pokemon names in order
    :param hps: list of pokemon HP stats in order
    :param attacks: list of pokemon attack stats in order
    :param defenses: list of pokemon defense stats in order
    :param speeds:  list of pokemon speed spats in order
    :param specials: list of pokemon special stats in order

    :return: a list of tuples containing pokemon data
    """
    return list(zip(ids,names,hps,attacks,defenses,speeds,specials))


def convert_to_json(pokedex):
    """
    :param pokedex: The "pokedex" generated by zip_stats()

    :return: JSON formatted pokemon data
    """
    keys = ["id", "name", "hp", "attack", "defense", "speed", "special"]
    result = []

    for pokemon in pokedex:
        result.append(OrderedDict(zip(keys,pokemon)))

    return json.dumps(result, indent=2)


def main():
    """
    :return: Fetched data as a list of tuples
    """
    soup = get_base_stat_data()

    ids = get_pokemon_ids(soup)
    names = get_pokemon_names(soup)
    hp_stats = get_hp_stats(soup)
    attack_stats = get_attack_stats(soup)
    defense_stats = get_defense_stats(soup)
    speed_stats = get_speed_stats(soup)
    special_stats = get_special_stats(soup)

    pokedex = zip_stats(ids, names, hp_stats, attack_stats, defense_stats, speed_stats, special_stats)

    return pokedex


if __name__ == "__main__":
    main()